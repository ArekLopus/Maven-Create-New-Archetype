-Final Archetype -> just execute mvn install in dir where the POM is and you can generate new project
-Project To Generate Archetype -> a prototype project that we will use to create archetype from.

-First of all. Git doesn't allow empty direcories and Maven archetype:create-from-project doesn't include them (you need to add them manually or do the .gitignore trick - > and then remove  <include>**/*.gitignore</include> entries from archetype-metadata.xml).
So, both directories below contain .gitignore file (to be included in github repo, later will be detailed explanation)
\Project To Generate Archetype\src\test\java\acds\
\Project To Generate Archetype\src\main\resources\

-Instruction to create a new archetype from my project
1. Go to the 'Project To Generate Archetype' dir where the POM is and execute
	mvn archetype:create-from-project
3. The archetype is created in: target/generated-sources/archetype
4. Move newly created archetype to a new directory.
5. IMPORTANT!!!  By default the artifactId of the archetype is generated by appending -archetype to the 
original artifactId of the template project (webapp-jee7  -›  webapp-jee7-archetype)
You can rename it manually in the POM    <artifactId>webapp-j-archetypeee7</artifactId>   -›    <artifactId>webapp-jee7</artifactId>
5. IMPORTANT!!!  Our project should contain 2 empty directories (There where 2 .gitigonre files are)
Go to src\main\resources\META-INF\maven\archetype-metadata.xml and remove 2 entries (entire <includes> elements)
	<includes>
	        <include>**/*.gitignore</include>
	</includes>
so Maven will create only empty directories without those 2 files.
6. Ececute:
	mvn install
7. Now our archetype should be ready to genetate 
mvn archetype:generate -B -DarchetypeGroupId=com.acds -DarchetypeArtifactId=webapp-jee7 -DarchetypeVersion=1.0.0 -DgroupId=com.mydomain -DartifactId=MyWebApp -Dpackage=mypackage -Dversion=1.0.0

(or, if not changed in p.5 : -DarchetypeArtifactId=webapp-jee7-archetype)


-General instruction to create a new archetype (based on my webapp-jee7 project)
1. Remove all other resources, such as IDE) specific files (project, .classpath, etc) that you don’t want to end up in the archetype 
2. Go to the dir where the POM is and execute
	mvn archetype:create-from-project
3. The archetype is created in: target/generated-sources/archetype
4. Move newly created archetype to a new directory.
5. IMPORTANT!!!  By default the artifactId of the archetype is generated by appending -archetype to the 
original artifactId of the template project (webapp-jee7  -›  webapp-jee7-archetype)
You can rename it manually in the POM    <artifactId>webapp-j-archetypeee7</artifactId>   -›    <artifactId>webapp-jee7</artifactId>
5. IMPORTANT!!!  If your project contains empty directories you HAVE TO ADD MANUALLY EACH AND EVERY  DIRECTORY!
Go to src\main\resources\META-INF\maven\archetype-metadata.xml and add new entry(ies) to <fileSets> element 
(in our example):
	<fileSet encoding="UTF-8">
	    <directory>src/main/resources</directory>
	</fileSet>
	 <fileSet packaged="true" encoding="UTF-8">
	      <directory>src/test/java</directory>
	</fileSet>
6. Ececute:
	mvn install
7. Now our archetype should be ready to genetate 
mvn archetype:generate -B -DarchetypeGroupId=com.acds -DarchetypeArtifactId=webapp-jee7 -DarchetypeVersion=1.0.0 -DgroupId=com.mydomain -DartifactId=MyWebApp -Dpackage=mypackage -Dversion=1.0.0

(or, if not changed in p.5 : -DarchetypeArtifactId=webapp-jee7-archetype)